module.exports = Class('CompletionHandler', Object, {
    constructor: function (preWait) {
        this.preWaits = {};
        this.waitHandles = {};
        this.finishHandlers = {};
        this.errors = [];

        this.preWaits[preWait] = this.wait(preWait);
    },
    finish: function (name, callback) {
        this.finishHandlers[name] = callback;
    },
    register: function (name) {
        var that = this;

        if (!(name in this.waitHandles)) {
            this.waitHandles[name] = 1;
        } else {
            this.waitHandles[name]++;
        }
        
        return function (err) {
            if (err) {
                that.errors.push(err);
            }

            that.unregister(name);
        }
    },
    unregister: function (name) {
        this.waitHandles[name]--;

        if (this.waitHandles[name] == 0) {
            if (name in this.finishHandlers) {
                this.finishHandlers[name]();
            }
        }
    },
    wait: function (name) {
        return this.register(name);
    },
    handle: function (name, callback) {
        this.finish(name, callback);
        
        if (name in  this.preWaits) {
            var cb = this.preWaits[name];
            delete this.preWaits[name];

            if (cb) {
                cb();
            }
        }
    }
});
